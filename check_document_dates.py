#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 2025
"""

import pymongo
from pymongo import MongoClient
from urllib.parse import quote_plus
from datetime import datetime
import json

# –†–Ø–î–û–ö –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û MONGODB ATLAS
username = quote_plus("test")
password = quote_plus("test")
MONGO_CONNECTION_STRING = f"mongodb+srv://{username}:{password}@clusterrd4u.7180sy4.mongodb.net/?retryWrites=true&w=majority&appName=ClusterRD4U"

# –ù–∞–∑–≤–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DATABASE_NAME = "ua_admin_territory"

def connect_to_mongodb():
    """–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas"""
    try:
        print("üîå –ü—ñ–¥–∫–ª—é—á–∞—é—Å—è –¥–æ MongoDB Atlas...")
        client = MongoClient(MONGO_CONNECTION_STRING)
        client.admin.command('ping')
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB Atlas")
        return client
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB: {e}")
        return None

def check_document_dates(client):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
    """
    db = client[DATABASE_NAME]
    
    collections = [
        'level1_regions',
        'level2_raions', 
        'level3_hromadas',
        'level4_settlements',
        'level_additional_city_districts'
    ]
    
    print("\nüìÖ –ü–ï–†–ï–í–Ü–†–ö–ê –î–ê–¢ –î–û–ö–£–ú–ï–ù–¢–Ü–í –£ –ë–ê–ó–Ü –î–ê–ù–ò–•")
    print("=" * 60)
    
    all_document_dates = set()
    territories_with_dates = 0
    territories_without_dates = 0
    status_records_with_dates = 0
    status_records_without_dates = 0
    
    for collection_name in collections:
        print(f"\nüìä –ö–æ–ª–µ–∫—Ü—ñ—è: {collection_name}")
        print("-" * 40)
        
        collection = db[collection_name]
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é —Å—Ç–∞—Ç—É—Å—ñ–≤
        territories = collection.find({
            "$or": [
                {"occupation_history": {"$exists": True}},
                {"combat_history": {"$exists": True}},
                {"status_history": {"$exists": True}}
            ]
        })
        
        collection_territories_with_dates = 0
        collection_territories_without_dates = 0
        collection_records_with_dates = 0
        collection_records_without_dates = 0
        
        for territory in territories:
            has_dates = False
            
            for history_field in ['occupation_history', 'combat_history', 'status_history']:
                if history_field in territory:
                    for period in territory[history_field]:
                        if 'document_date' in period:
                            all_document_dates.add(period['document_date'])
                            collection_records_with_dates += 1
                            has_dates = True
                        else:
                            collection_records_without_dates += 1
            
            if has_dates:
                collection_territories_with_dates += 1
            else:
                collection_territories_without_dates += 1
        
        territories_with_dates += collection_territories_with_dates
        territories_without_dates += collection_territories_without_dates
        status_records_with_dates += collection_records_with_dates
        status_records_without_dates += collection_records_without_dates
        
        print(f"  –¢–µ—Ä–∏—Ç–æ—Ä—ñ–π –∑ –¥–∞—Ç–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: {collection_territories_with_dates}")
        print(f"  –¢–µ—Ä–∏—Ç–æ—Ä—ñ–π –±–µ–∑ –¥–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: {collection_territories_without_dates}")
        print(f"  –ó–∞–ø–∏—Å—ñ–≤ —Å—Ç–∞—Ç—É—Å—ñ–≤ –∑ –¥–∞—Ç–∞–º–∏: {collection_records_with_dates}")
        print(f"  –ó–∞–ø–∏—Å—ñ–≤ —Å—Ç–∞—Ç—É—Å—ñ–≤ –±–µ–∑ –¥–∞—Ç: {collection_records_without_dates}")
    
    print(f"\nüìà –ó–ê–ì–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("-" * 40)
    print(f"  –¢–µ—Ä–∏—Ç–æ—Ä—ñ–π –∑ –¥–∞—Ç–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: {territories_with_dates}")
    print(f"  –¢–µ—Ä–∏—Ç–æ—Ä—ñ–π –±–µ–∑ –¥–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤: {territories_without_dates}")
    print(f"  –ó–∞–ø–∏—Å—ñ–≤ —Å—Ç–∞—Ç—É—Å—ñ–≤ –∑ –¥–∞—Ç–∞–º–∏: {status_records_with_dates}")
    print(f"  –ó–∞–ø–∏—Å—ñ–≤ —Å—Ç–∞—Ç—É—Å—ñ–≤ –±–µ–∑ –¥–∞—Ç: {status_records_without_dates}")
    
    if all_document_dates:
        print(f"\nüìÖ –ó–ù–ê–ô–î–ï–ù–Ü –î–ê–¢–ò –î–û–ö–£–ú–ï–ù–¢–Ü–í:")
        print("-" * 40)
        for doc_date in sorted(all_document_dates):
            print(f"  ‚Ä¢ {doc_date}")
    else:
        print(f"\n‚ö†Ô∏è  –î–ê–¢–ò –î–û–ö–£–ú–ï–ù–¢–Ü–í –ù–ï –ó–ù–ê–ô–î–ï–ù–Ü")
        print("-" * 40)
        print("  –ñ–æ–¥–µ–Ω –∑–∞–ø–∏—Å —Å—Ç–∞—Ç—É—Å—É –Ω–µ –º—ñ—Å—Ç–∏—Ç—å –ø–æ–ª–µ 'document_date'")
    
    return all_document_dates, territories_with_dates, territories_without_dates

def show_sample_records_with_dates(client):
    """
    –ü–æ–∫–∞–∑ –ø—Ä–∏–∫–ª–∞–¥—ñ–≤ –∑–∞–ø–∏—Å—ñ–≤ –∑ –¥–∞—Ç–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
    """
    db = client[DATABASE_NAME]
    
    collections = [
        'level1_regions',
        'level2_raions', 
        'level3_hromadas',
        'level4_settlements',
        'level_additional_city_districts'
    ]
    
    print(f"\nüìã –ü–†–ò–ö–õ–ê–î–ò –ó–ê–ü–ò–°–Ü–í –ó –î–ê–¢–ê–ú–ò –î–û–ö–£–ú–ï–ù–¢–Ü–í:")
    print("=" * 60)
    
    sample_count = 0
    max_samples = 5
    
    for collection_name in collections:
        if sample_count >= max_samples:
            break
            
        collection = db[collection_name]
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –∑ –¥–∞—Ç–∞–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
        territories = collection.find({
            "$or": [
                {"occupation_history.document_date": {"$exists": True}},
                {"combat_history.document_date": {"$exists": True}},
                {"status_history.document_date": {"$exists": True}}
            ]
        }).limit(max_samples - sample_count)
        
        for territory in territories:
            if sample_count >= max_samples:
                break
                
            print(f"\nüèõÔ∏è  –¢–µ—Ä–∏—Ç–æ—Ä—ñ—è: {territory['name']} ({collection_name})")
            
            for history_field in ['occupation_history', 'combat_history', 'status_history']:
                if history_field in territory:
                    for period in territory[history_field]:
                        if 'document_date' in period:
                            print(f"  üìÑ {history_field}: {period['status']}")
                            print(f"     üìÖ –î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞: {period['document_date']}")
                            if 'document_date_iso' in period:
                                print(f"     üìÖ –î–∞—Ç–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (ISO): {period['document_date_iso']}")
                            if 'source_document' in period:
                                print(f"     üìã –î–∂–µ—Ä–µ–ª–æ: {period['source_document']}")
                            print()
                            sample_count += 1
                            break
                    if sample_count >= max_samples:
                        break

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üîç –ü–ï–†–ï–í–Ü–†–ö–ê –î–ê–¢ –î–û–ö–£–ú–ï–ù–¢–Ü–í –£ –ë–ê–ó–Ü –î–ê–ù–ò–•")
    print("=" * 60)
    
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ MongoDB
    client = connect_to_mongodb()
    if not client:
        return
    
    try:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
        document_dates, with_dates, without_dates = check_document_dates(client)
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–ø–∏—Å—ñ–≤
        if document_dates:
            show_sample_records_with_dates(client)
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó
        print(f"\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
        print("-" * 40)
        if without_dates > 0:
            print(f"  ‚ö†Ô∏è  –ó–Ω–∞–π–¥–µ–Ω–æ {without_dates} —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π –±–µ–∑ –¥–∞—Ç –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤")
            print(f"     –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —ó—Ö, –¥–æ–¥–∞–≤—à–∏ –ø–æ–ª–µ 'document_date'")
        else:
            print(f"  ‚úÖ –í—Å—ñ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –º–∞—é—Ç—å –¥–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤")
        
        if document_dates:
            print(f"  üìÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –¥–∞—Ç–∏: {', '.join(sorted(document_dates))}")
        
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
    
    finally:
        client.close()
        print("\nüîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ")

if __name__ == "__main__":
    main() 