#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–≤–Ω–æ–≥–æ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö —Å—Ç–∞—Ç—É—Å—ñ–≤ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π
–í–∏–¥–∞–ª—è—î –≤—Å—ñ –ø–æ–ª—è, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑—ñ —Å—Ç–∞—Ç—É—Å–∞–º–∏ —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—î—é
"""

import pymongo
from pymongo import MongoClient
from urllib.parse import quote_plus
from datetime import datetime, timezone
import json

# –†–Ø–î–û–ö –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û MONGODB ATLAS
username = quote_plus("test")
password = quote_plus("test")
MONGO_CONNECTION_STRING = f"mongodb+srv://{username}:{password}@clusterrd4u.7180sy4.mongodb.net/?retryWrites=true&w=majority&appName=ClusterRD4U"

# –ù–∞–∑–≤–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DATABASE_NAME = "ua_admin_territory"

def connect_to_mongodb():
    """–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas"""
    try:
        print("üîå –ü—ñ–¥–∫–ª—é—á–∞—é—Å—è –¥–æ MongoDB Atlas...")
        client = MongoClient(MONGO_CONNECTION_STRING)
        client.admin.command('ping')
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB Atlas")
        return client
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB: {e}")
        return None

def clean_all_status_fields(client):
    """
    –ü–æ–≤–Ω–µ –æ—á–∏—â–µ–Ω–Ω—è –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑—ñ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    """
    db = client[DATABASE_NAME]
    
    collections = [
        'level1_regions',
        'level2_raions', 
        'level3_hromadas',
        'level4_settlements',
        'level_additional_city_districts'
    ]
    
    # –ü–æ–ª—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
    fields_to_remove = [
        # –ü–æ—Ç–æ—á–Ω—ñ —Å—Ç–∞—Ç—É—Å–∏
        "current_status",
        "status_start_date", 
        "status_end_date",
        "last_status_update",
        
        # –û–∫—É–ø–∞—Ü—ñ—è
        "current_occupation_status",
        "occupation_start_date",
        "occupation_end_date", 
        "last_occupation_update",
        "occupation_history",
        
        # –ë–æ–π–æ–≤—ñ –¥—ñ—ó
        "combat_history",
        
        # –ó–∞–≥–∞–ª—å–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è —Å—Ç–∞—Ç—É—Å—ñ–≤
        "status_history"
    ]
    
    total_processed = 0
    total_updated = 0
    total_errors = 0
    
    print("\nüßπ –ü–û–ß–ò–ù–ê–Æ –ü–û–í–ù–ï –û–ß–ò–©–ï–ù–ù–Ø –í–°–Ü–• –°–¢–ê–¢–£–°–Ü–í...")
    print("-" * 60)
    print("üóëÔ∏è  –í–∏–¥–∞–ª—è—é –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–æ–ª—è:")
    for field in fields_to_remove:
        print(f"   ‚Ä¢ {field}")
    print("-" * 60)
    
    for collection_name in collections:
        print(f"\nüìä –û–±—Ä–æ–±–ª—è—é –∫–æ–ª–µ–∫—Ü—ñ—é: {collection_name}")
        
        collection = db[collection_name]
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó, —è–∫—ñ –º–∞—é—Ç—å —Ö–æ—á–∞ –± –æ–¥–Ω–µ –ø–æ–ª–µ —Å—Ç–∞—Ç—É—Å—É
        territories = collection.find({
            "$or": [
                {"current_status": {"$exists": True}},
                {"status_start_date": {"$exists": True}},
                {"status_end_date": {"$exists": True}},
                {"last_status_update": {"$exists": True}},
                {"current_occupation_status": {"$exists": True}},
                {"occupation_start_date": {"$exists": True}},
                {"occupation_end_date": {"$exists": True}},
                {"last_occupation_update": {"$exists": True}},
                {"occupation_history": {"$exists": True}},
                {"combat_history": {"$exists": True}},
                {"status_history": {"$exists": True}}
            ]
        })
        
        collection_processed = 0
        collection_updated = 0
        collection_errors = 0
        
        for territory in territories:
            total_processed += 1
            collection_processed += 1
            
            try:
                # –ü—ñ–¥–≥–æ—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
                unset_data = {}
                for field in fields_to_remove:
                    if field in territory:
                        unset_data[field] = ""
                
                if unset_data:
                    # –í–∏–∫–æ–Ω—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ª—ñ–≤
                    result = collection.update_one(
                        {"_id": territory["_id"]}, 
                        {"$unset": unset_data}
                    )
                    
                    if result.modified_count > 0:
                        total_updated += 1
                        collection_updated += 1
                        print(f"  ‚úÖ {territory['name']}: –≤–∏–¥–∞–ª–µ–Ω–æ {len(unset_data)} –ø–æ–ª—ñ–≤")
                    else:
                        print(f"  ‚ö†Ô∏è  {territory['name']}: –Ω–µ–º–∞—î –∑–º—ñ–Ω")
                else:
                    print(f"  ‚ÑπÔ∏è  {territory['name']}: –Ω–µ–º–∞—î –ø–æ–ª—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è")
                
            except Exception as e:
                print(f"  ‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ {territory.get('name', '–ù–µ–≤—ñ–¥–æ–º–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—è')}: {e}")
                total_errors += 1
                collection_errors += 1
        
        print(f"  üìä {collection_name}: –æ–±—Ä–æ–±–ª–µ–Ω–æ {collection_processed}, –æ–Ω–æ–≤–ª–µ–Ω–æ {collection_updated}, –ø–æ–º–∏–ª–æ–∫ {collection_errors}")
    
    print(f"\nüéØ –ü–Ü–î–°–£–ú–ö–ò –û–ß–ò–©–ï–ù–ù–Ø:")
    print(f"  –ó–∞–≥–∞–ª–æ–º –æ–±—Ä–æ–±–ª–µ–Ω–æ: {total_processed}")
    print(f"  –û–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")
    print(f"  –ü–æ–º–∏–ª–æ–∫: {total_errors}")
    
    return total_processed, total_updated, total_errors

def verify_cleanup(client):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –≤—Å—ñ –ø–æ–ª—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –±—É–ª–∏ –≤–∏–¥–∞–ª–µ–Ω—ñ
    """
    db = client[DATABASE_NAME]
    
    collections = [
        'level1_regions',
        'level2_raions', 
        'level3_hromadas',
        'level4_settlements',
        'level_additional_city_districts'
    ]
    
    print("\nüîç –ü–ï–†–ï–í–Ü–†–ö–ê –û–ß–ò–©–ï–ù–ù–Ø:")
    print("-" * 40)
    
    fields_to_check = [
        "current_status",
        "status_start_date", 
        "status_end_date",
        "last_status_update",
        "current_occupation_status",
        "occupation_start_date",
        "occupation_end_date", 
        "last_occupation_update",
        "occupation_history",
        "combat_history",
        "status_history"
    ]
    
    total_remaining = 0
    
    for collection_name in collections:
        collection = db[collection_name]
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–∂–Ω–µ –ø–æ–ª–µ
        for field in fields_to_check:
            count = collection.count_documents({field: {"$exists": True}})
            if count > 0:
                print(f"  ‚ö†Ô∏è  {collection_name}.{field}: {count} –∑–∞–ø–∏—Å—ñ–≤")
                total_remaining += count
        
        if total_remaining == 0:
            print(f"  ‚úÖ {collection_name}: –≤—Å—ñ –ø–æ–ª—è —Å—Ç–∞—Ç—É—Å—ñ–≤ –≤–∏–¥–∞–ª–µ–Ω—ñ")
    
    if total_remaining == 0:
        print("\n‚úÖ –í–°–Ü –ü–û–õ–Ø –°–¢–ê–¢–£–°–Ü–í –£–°–ü–Ü–®–ù–û –í–ò–î–ê–õ–ï–ù–Ü!")
    else:
        print(f"\n‚ö†Ô∏è  –ó–∞–ª–∏—à–∏–ª–æ—Å—è {total_remaining} –∑–∞–ø–∏—Å—ñ–≤ –∑ –ø–æ–ª—è–º–∏ —Å—Ç–∞—Ç—É—Å—ñ–≤")
    
    return total_remaining

def show_collection_statistics(client):
    """
    –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–ª–µ–∫—Ü—ñ–π –ø—ñ—Å–ª—è –æ—á–∏—â–µ–Ω–Ω—è
    """
    db = client[DATABASE_NAME]
    
    collections = [
        'level1_regions',
        'level2_raions', 
        'level3_hromadas',
        'level4_settlements',
        'level_additional_city_districts'
    ]
    
    print("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–õ–ï–ö–¶–Ü–ô –ü–Ü–°–õ–Ø –û–ß–ò–©–ï–ù–ù–Ø:")
    print("-" * 50)
    
    total_territories = 0
    
    for collection_name in collections:
        collection = db[collection_name]
        count = collection.count_documents({})
        total_territories += count
        print(f"  {collection_name}: {count} —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π")
    
    print(f"\nüìä –ó–ê–ì–ê–õ–¨–ù–ê –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"  –ó–∞–≥–∞–ª–æ–º —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π: {total_territories}")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üóëÔ∏è  –°–ö–†–ò–ü–¢ –ü–û–í–ù–û–ì–û –û–ß–ò–©–ï–ù–ù–Ø –°–¢–ê–¢–£–°–Ü–í")
    print("=" * 60)
    print("‚ö†Ô∏è  –£–í–ê–ì–ê: –¶–µ–π —Å–∫—Ä–∏–ø—Ç –≤–∏–¥–∞–ª–∏—Ç—å –í–°–Ü –ø–æ–ª—è, –ø–æ–≤'—è–∑–∞–Ω—ñ –∑—ñ —Å—Ç–∞—Ç—É—Å–∞–º–∏!")
    print("=" * 60)
    
    # –ó–∞–ø–∏—Ç—É—î–º–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
    confirm = input("\nü§î –í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –≤—Å—ñ —Å—Ç–∞—Ç—É—Å–∏? (yes/no): ").strip().lower()
    
    if confirm != 'yes':
        print("‚ùå –û–ø–µ—Ä–∞—Ü—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ")
        return
    
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ MongoDB
    client = connect_to_mongodb()
    if not client:
        return
    
    try:
        # –û—á–∏—â—É—î–º–æ –≤—Å—ñ –ø–æ–ª—è —Å—Ç–∞—Ç—É—Å—ñ–≤
        processed, updated, errors = clean_all_status_fields(client)
        
        if errors == 0:
            print("\n‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            remaining = verify_cleanup(client)
            
            if remaining == 0:
                print("\nüéâ –ë–ê–ó–ê –î–ê–ù–ò–• –ì–û–¢–û–í–ê –î–õ–Ø –ù–û–í–û–ì–û –Ü–ú–ü–û–†–¢–£!")
                
                # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                show_collection_statistics(client)
            else:
                print(f"\n‚ö†Ô∏è  –ó–∞–ª–∏—à–∏–ª–æ—Å—è {remaining} –∑–∞–ø–∏—Å—ñ–≤ –∑ –ø–æ–ª—è–º–∏ —Å—Ç–∞—Ç—É—Å—ñ–≤")
        else:
            print(f"\n‚ö†Ô∏è  –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑ {errors} –ø–æ–º–∏–ª–∫–∞–º–∏")
            
    except Exception as e:
        print(f"\n‚ùå –ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: {e}")
    
    finally:
        client.close()
        print("\nüîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ")

if __name__ == "__main__":
    main() 