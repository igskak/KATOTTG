#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É –¥–∞–Ω–∏—Ö –∑ CSV-—Ñ–∞–π–ª—É kodifikator-16-05-2025.csv –≤ MongoDB Atlas
–ê–≤—Ç–æ—Ä: AI Assistant
–î–∞—Ç–∞: 2025
"""

import pandas as pd
import pymongo
from pymongo import MongoClient
import sys
import os
from urllib.parse import quote_plus

# –†–Ø–î–û–ö –ü–Ü–î–ö–õ–Æ–ß–ï–ù–ù–Ø –î–û MONGODB ATLAS
# –ó–∞–º—ñ–Ω—ñ—Ç—å —Ü–µ–π —Ä—è–¥–æ–∫ –Ω–∞ —Å–≤—ñ–π —Ä—è–¥–æ–∫ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∑ MongoDB Atlas
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ quote_plus –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–æ–¥—É–≤–∞–Ω–Ω—è –ª–æ–≥—ñ–Ω–∞ —Ç–∞ –ø–∞—Ä–æ–ª—è
username = quote_plus("test")
password = quote_plus("test")
MONGO_CONNECTION_STRING = f"mongodb+srv://{username}:{password}@clusterrd4u.7180sy4.mongodb.net/?retryWrites=true&w=majority&appName=ClusterRD4U"

# –ù–∞–∑–≤–∞ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DATABASE_NAME = "ua_admin_territory"

# –ú–∞–ø—ñ–Ω–≥ –∫–∞—Ç–µ–≥–æ—Ä—ñ–π –¥–æ –∫–æ–ª–µ–∫—Ü—ñ–π
CATEGORY_TO_COLLECTION = {
    'O': 'level1_regions',      # –û–±–ª–∞—Å—Ç—ñ —Ç–∞ –ê–†–ö
    'K': 'level1_regions',      # –û–±–ª–∞—Å—Ç—ñ —Ç–∞ –ê–†–ö
    'P': 'level2_raions',       # –†–∞–π–æ–Ω–∏
    'H': 'level3_hromadas',     # –ì—Ä–æ–º–∞–¥–∏
    'M': 'level4_settlements',  # –ú—ñ—Å—Ç–∞
    'X': 'level4_settlements',  # –°–µ–ª–∏—â–∞ –º—ñ—Å—å–∫–æ–≥–æ —Ç–∏–ø—É
    'C': 'level4_settlements',  # –°–µ–ª–∞
    'B': 'level_additional_city_districts'  # –ú—ñ—Å—å–∫—ñ —Ä–∞–π–æ–Ω–∏
}

def connect_to_mongodb():
    """–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas"""
    try:
        print("üîå –ü—ñ–¥–∫–ª—é—á–∞—é—Å—è –¥–æ MongoDB Atlas...")
        client = MongoClient(MONGO_CONNECTION_STRING)
        # –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
        client.admin.command('ping')
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB Atlas")
        return client
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB: {e}")
        sys.exit(1)

def read_csv_file():
    """–ß–∏—Ç–∞–Ω–Ω—è CSV-—Ñ–∞–π–ª—É"""
    try:
        print("üìñ –ß–∏—Ç–∞—é CSV-—Ñ–∞–π–ª...")
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ñ –Ω–∞–∑–≤–∏ –∫–æ–ª–æ–Ω–æ–∫
        column_names = [
            '–ü–µ—Ä—à–∏–π —Ä—ñ–≤–µ–Ω—å',
            '–î—Ä—É–≥–∏–π —Ä—ñ–≤–µ–Ω—å', 
            '–¢—Ä–µ—Ç—ñ–π —Ä—ñ–≤–µ–Ω—å',
            '–ß–µ—Ç–≤–µ—Ä—Ç–∏–π —Ä—ñ–≤–µ–Ω—å',
            '–î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å',
            '–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –æ–±\'—î–∫—Ç–∞',
            '–ù–∞–∑–≤–∞ –æ–±\'—î–∫—Ç–∞'
        ]
        
        # –ß–∏—Ç–∞—î–º–æ CSV –∑ –ø—Ä–∞–≤–∏–ª—å–Ω–∏–º –∫–æ–¥—É–≤–∞–Ω–Ω—è–º, —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫–æ–º —Ç–∞ –Ω–∞–∑–≤–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫
        df = pd.read_csv('kodifikator-16-05-2025.csv', 
                        encoding='utf-8', 
                        sep=';',
                        skiprows=7,  # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞ –º–µ—Ç–∞–¥–∞–Ω—ñ
                        names=column_names)  # –í–∫–∞–∑—É—î–º–æ –Ω–∞–∑–≤–∏ –∫–æ–ª–æ–Ω–æ–∫
        
        print(f"‚úÖ –ü—Ä–æ—á–∏—Ç–∞–Ω–æ {len(df)} —Ä—è–¥–∫—ñ–≤ –∑ CSV-—Ñ–∞–π–ª—É")
        print("\nüß© –°–ø–∏—Å–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ —É DataFrame:")
        print(df.columns.tolist())
        print("\nüîç –ü–µ—Ä—à—ñ 3 —Ä—è–¥–∫–∏:")
        print(df.head(3))
        return df
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è CSV-—Ñ–∞–π–ª—É: {e}")
        sys.exit(1)

def determine_object_code_and_parent(row):
    """
    –í–∏–∑–Ω–∞—á–∞—î –∫–æ–¥ –æ–±'—î–∫—Ç–∞ —Ç–∞ –∫–æ–¥ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ –æ–±'—î–∫—Ç–∞
    –Ω–∞ –æ—Å–Ω–æ–≤—ñ –æ—Å—Ç–∞–Ω–Ω—å–æ—ó –∑–∞–ø–æ–≤–Ω–µ–Ω–æ—ó –∫–æ–ª–æ–Ω–∫–∏ —Ä—ñ–≤–Ω—ñ–≤
    """
    levels = ['–î–æ–¥–∞—Ç–∫–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å', '–ß–µ—Ç–≤–µ—Ä—Ç–∏–π —Ä—ñ–≤–µ–Ω—å', '–¢—Ä–µ—Ç—ñ–π —Ä—ñ–≤–µ–Ω—å', '–î—Ä—É–≥–∏–π —Ä—ñ–≤–µ–Ω—å', '–ü–µ—Ä—à–∏–π —Ä—ñ–≤–µ–Ω—å']
    
    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –æ—Å—Ç–∞–Ω–Ω—é –∑–∞–ø–æ–≤–Ω–µ–Ω—É –∫–æ–ª–æ–Ω–∫—É —Ä—ñ–≤–Ω—è
    object_code = None
    parent_code = None
    
    for i, level in enumerate(levels):
        if pd.notna(row[level]) and str(row[level]).strip() != '':
            object_code = str(row[level]).strip()
            # –ë–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –∫–æ–¥ - —Ü–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è (—è–∫—â–æ –≤—ñ–Ω —ñ—Å–Ω—É—î)
            if i + 1 < len(levels):
                parent_level = levels[i + 1]
                if pd.notna(row[parent_level]) and str(row[parent_level]).strip() != '':
                    parent_code = str(row[parent_level]).strip()
            break
    
    return object_code, parent_code

def import_data_to_mongodb(client, df):
    """–Ü–º–ø–æ—Ä—Ç –¥–∞–Ω–∏—Ö –≤ MongoDB"""
    db = client[DATABASE_NAME]
    
    # –õ—ñ—á–∏–ª—å–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    stats = {collection: 0 for collection in set(CATEGORY_TO_COLLECTION.values())}
    
    print("üöÄ –ü–æ—á–∏–Ω–∞—é —ñ–º–ø–æ—Ä—Ç –¥–∞–Ω–∏—Ö...")
    
    for index, row in df.iterrows():
        try:
            # –û—Ç—Ä–∏–º—É—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –æ–±'—î–∫—Ç–∞
            category = str(row['–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –æ–±\'—î–∫—Ç–∞']).strip()
            
            # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ä—è–¥–∫–∏ –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
            if pd.isna(category) or category == '' or category == 'nan':
                continue
            
            # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–¥ –æ–±'—î–∫—Ç–∞ —Ç–∞ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–∏–π –∫–æ–¥
            object_code, parent_code = determine_object_code_and_parent(row)
            
            # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ä—è–¥–∫–∏ –±–µ–∑ –∫–æ–¥—É –æ–±'—î–∫—Ç–∞
            if not object_code:
                continue
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –Ω–∞–∑–≤—É –æ–±'—î–∫—Ç–∞
            object_name = str(row['–ù–∞–∑–≤–∞ –æ–±\'—î–∫—Ç–∞']).strip()
            
            # –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–ª–µ–∫—Ü—ñ—é –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
            if category not in CATEGORY_TO_COLLECTION:
                print(f"‚ö†Ô∏è  –ù–µ–≤—ñ–¥–æ–º–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è '{category}' –¥–ª—è –æ–±'—î–∫—Ç–∞ {object_name}")
                continue
            
            collection_name = CATEGORY_TO_COLLECTION[category]
            collection = db[collection_name]
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–∫—É–º–µ–Ω—Ç –¥–ª—è MongoDB
            document = {
                "_id": object_code,
                "name": object_name,
                "category": category,
                "parent_code": parent_code
            }
            
            # –í–∏–¥–∞–ª—è—î–º–æ parent_code —è–∫—â–æ –≤—ñ–Ω None
            if parent_code is None:
                del document["parent_code"]
            
            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ replace_one –∑ upsert=True
            collection.replace_one(
                {"_id": object_code}, 
                document, 
                upsert=True
            )
            
            stats[collection_name] += 1
            
            # –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–æ–≥—Ä–µ—Å –∫–æ–∂–Ω—ñ 1000 –∑–∞–ø–∏—Å—ñ–≤
            if (index + 1) % 1000 == 0:
                print(f"üìä –û–±—Ä–æ–±–ª–µ–Ω–æ {index + 1} —Ä—è–¥–∫—ñ–≤...")
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ä—è–¥–∫–∞ {index + 1}: {e}")
            continue
    
    print("\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ñ–º–ø–æ—Ä—Ç—É:")
    for collection, count in stats.items():
        print(f"   {collection}: {count} –∑–∞–ø–∏—Å—ñ–≤")
    
    total_imported = sum(stats.values())
    print(f"\n‚úÖ –Ü–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –í—Å—å–æ–≥–æ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ {total_imported} –∑–∞–ø–∏—Å—ñ–≤")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("=" * 60)
    print("üöÄ –°–ö–†–ò–ü–¢ –Ü–ú–ü–û–†–¢–£ –î–ê–ù–ò–• –í MONGODB ATLAS")
    print("=" * 60)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å CSV-—Ñ–∞–π–ª—É
    if not os.path.exists('kodifikator-16-05-2025.csv'):
        print("‚ùå –§–∞–π–ª 'kodifikator-16-05-2025.csv' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –ø–æ—Ç–æ—á–Ω—ñ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó")
        sys.exit(1)
    
    # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ—Å—è –¥–æ MongoDB
    client = connect_to_mongodb()
    
    # –ß–∏—Ç–∞—î–º–æ CSV-—Ñ–∞–π–ª
    df = read_csv_file()
    
    # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –¥–∞–Ω—ñ
    import_data_to_mongodb(client, df)
    
    # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è
    client.close()
    print("\nüîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–∫—Ä–∏—Ç–æ")
    print("=" * 60)
    print("üéâ –†–æ–±–æ—Ç–∞ —Å–∫—Ä–∏–ø—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!")

if __name__ == "__main__":
    main() 